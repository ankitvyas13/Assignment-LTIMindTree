<!doctype html>
  <html class="no-js" lang="{{ request.locale.iso_code }}">
    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      <meta name="theme-color" content="">
      <link rel="canonical" href="{{ canonical_url }}">
      <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
  
      {%- if settings.favicon != blank -%}
        <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
      {%- endif -%}
  
      {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
        <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
      {%- endunless -%}
  
      <title>
        {{ page_title }}
        {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
        {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
        {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
      </title>
  
      {% if page_description %}
        <meta name="description" content="{{ page_description | escape }}">
      {% endif %}
  
      {% render 'meta-tags' %}
  
      <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
      {{ content_for_header }}
  
      {% comment %} {{ 'base.css' | asset_url | stylesheet_tag }} {% endcomment %}
  
      {% comment %}
      {%- unless settings.type_body_font.system? -%}
        <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {%- endunless -%}
      {%- unless settings.type_header_font.system? -%}
        <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {%- endunless -%}
  
      {%- if settings.predictive_search_enabled -%}
        <link rel="stylesheet" href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
      {%- endif -%}
      {% endcomment %}
  
      <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
<<<<<<< HEAD
      </script>
    </head>
  
    <body>
      {% comment %} <a class="skip-to-content-link button visually-hidden" href="#MainContent">
        {{ "accessibility.skip_to_text" | t }}
      </a> {% endcomment %}
  
      <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
        {{ content_for_layout }}
      </main>
  
      <script>
        window.shopUrl = '{{ request.origin }}';
        window.routes = {
          cart_add_url: '{{ routes.cart_add_url }}',
          cart_change_url: '{{ routes.cart_change_url }}',
          cart_update_url: '{{ routes.cart_update_url }}',
          cart_url: '{{ routes.cart_url }}',
          predictive_search_url: '{{ routes.predictive_search_url }}'
        };
  
        /*
        window.cartStrings = {
          error: `{{ 'sections.cart.cart_error' | t }}`,
          quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
        }
  
        window.variantStrings = {
          addToCart: `{{ 'products.product.add_to_cart' | t }}`,
          soldOut: `{{ 'products.product.sold_out' | t }}`,
          unavailable: `{{ 'products.product.unavailable' | t }}`,
          unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
        }
  
        window.accessibilityStrings = {
          imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
          shareSuccess: `{{ 'general.share.success_message' | t }}`,
          pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
          playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        }
        */
      </script>
  
      {% comment %}
      {%- if settings.predictive_search_enabled -%}
        <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
      {%- endif -%}
    {% endcomment %}
    </body>
  </html>
=======
    </script>
  </head>

  <body class="gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}

    {% sections 'header-group' %}

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        recipientFormExpanded: `{{ 'recipient.form.expanded' | t }}`,
        recipientFormCollapsed: `{{ 'recipient.form.collapsed' | t }}`,
      };
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    <script>
      interface CartItem {
  id: string;
  name: string;
  quantity: number;
  price: number;
}

interface CartState {
  items: CartItem[];
  isUpdating: boolean;
}

class ShopifyCart {
  private state: CartState;

  constructor() {
    this.state = {
      items: [],
      isUpdating: false,
    };
  }

  getItems(): CartItem[] {
    return this.state.items;
  }

  addItem(item: CartItem): void {
    const existingItem = this.state.items.find((i) => i.id === item.id);

    if (existingItem) {
      existingItem.quantity += item.quantity;
    } else {
      this.state.items.push(item);
    }

    this.updateCart();
  }

  removeItem(itemId: string): void {
    this.state.items = this.state.items.filter((item) => item.id !== itemId);
    this.updateCart();
  }

  changeQuantity(itemId: string, newQuantity: number): void {
    const item = this.state.items.find((i) => i.id === itemId);

    if (item) {
      item.quantity = newQuantity;
      this.updateCart();
    }
  }

  updateCart(): void {
    this.state.isUpdating = true;

    // Simulate submitting the cart changes to Shopify via AJAX
    setTimeout(() => {
      this.state.isUpdating = false;
      console.log('Cart updated:', this.state);
    }, 1000);
  }
}

// Example usage
const cart = new ShopifyCart();

cart.addItem({
  id: 'product1',
  name: 'Product 1',
  quantity: 2,
  price: 10,
});

cart.addItem({
  id: 'product2',
  name: 'Product 2',
  quantity: 1,
  price: 20,
});

console.log(cart.getItems());

cart.changeQuantity('product1', 3);
cart.removeItem('product2');

    </script>
  </body>
</html>
>>>>>>> 146e2c5ffe395982abc1492dc9f9961e83374bad
